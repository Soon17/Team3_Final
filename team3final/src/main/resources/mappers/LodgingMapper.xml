<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.team3final.dao.LodgingDAO">
	<select id="selectRegionLodgingList" resultType="LodgingVO">
		select* from region; 
	</select>
	<select id="selectSearchLodgingList" resultType="LodgingVO">
		SELECT lodging.*,
		(
			SELECT ROUND(AVG(rv_rating), 1)
			FROM review
			WHERE rv_table_name = 'lodging' 
				AND rv_number = lodging.LD_NUM
		) AS avg_rating,
		MIN(t.rm_price) AS min_price 
		FROM lodging
		JOIN (
			SELECT *
			FROM room
			LEFT JOIN (
				SELECT 
					lr_rm_num, 
					COUNT(lr_rm_num) AS count
				FROM lo_reservation
				WHERE (LR_CHECKOUT BETWEEN DATE_ADD(#{lr_checkin}, INTERVAL 1 DAY) AND #{lr_checkout})
				OR (LR_CHECKIN BETWEEN #{lr_checkin} AND DATE_SUB(#{lr_checkout}, INTERVAL 1 DAY))
					AND LR_STATE = "예약완료"
				GROUP BY lr_rm_num
			) AS tmp_lo_reservation ON lr_rm_num = rm_num
			WHERE RM_ROOMCOUNT - IFNULL(count, 0) > 0 
			AND rm_person >= #{rm_person}
		) t ON rm_ld_num = ld_num
		JOIN region ON rg_num = LD_RG_NUM
		WHERE rg_name = #{rg_name}
		GROUP BY lodging.LD_NUM;
	</select>
	<select id="selectSearchAVGLodgingList" resultType="LodgingVO">
		SELECT lodging.*,
		(
			SELECT ROUND(AVG(rv_rating), 1)
			FROM review
			WHERE rv_table_name = 'lodging' 
				AND rv_number = lodging.LD_NUM
		) AS avg_rating,
		MIN(t.rm_price) AS min_price 
		FROM lodging
		JOIN (
			SELECT *
			FROM room
			LEFT JOIN (
				SELECT 
					lr_rm_num, 
					COUNT(lr_rm_num) AS count
				FROM lo_reservation
				WHERE (LR_CHECKOUT BETWEEN DATE_ADD(#{lr_checkin}, INTERVAL 1 DAY) AND #{lr_checkout})
				OR (LR_CHECKIN BETWEEN #{lr_checkin} AND DATE_SUB(#{lr_checkout}, INTERVAL 1 DAY))
					AND LR_STATE = "예약완료"
				GROUP BY lr_rm_num
			) AS tmp_lo_reservation ON lr_rm_num = rm_num
			WHERE RM_ROOMCOUNT - IFNULL(count, 0) > 0 
			AND rm_person >= #{rm_person}
		) t ON rm_ld_num = ld_num
		JOIN region ON rg_num = LD_RG_NUM
		WHERE rg_name = #{rg_name}
		GROUP BY lodging.LD_NUM
		ORDER BY avg_rating DESC;
	</select>
	<select id="selectSearchPriceLodgingList" resultType="LodgingVO">
		SELECT lodging.*,
		(
			SELECT ROUND(AVG(rv_rating), 1)
			FROM review
			WHERE rv_table_name = 'lodging' 
				AND rv_number = lodging.LD_NUM
		) AS avg_rating,
		MIN(t.rm_price) AS min_price 
		FROM lodging
		JOIN (
			SELECT *
			FROM room
			LEFT JOIN (
				SELECT 
					lr_rm_num, 
					COUNT(lr_rm_num) AS count
				FROM lo_reservation
				WHERE (LR_CHECKOUT BETWEEN DATE_ADD(#{lr_checkin}, INTERVAL 1 DAY) AND #{lr_checkout})
				OR (LR_CHECKIN BETWEEN #{lr_checkin} AND DATE_SUB(#{lr_checkout}, INTERVAL 1 DAY))
					AND LR_STATE = "예약완료"
				GROUP BY lr_rm_num
			) AS tmp_lo_reservation ON lr_rm_num = rm_num
			WHERE RM_ROOMCOUNT - IFNULL(count, 0) > 0 
			AND rm_person >= #{rm_person}
		) t ON rm_ld_num = ld_num
		JOIN region ON rg_num = LD_RG_NUM
		WHERE rg_name = #{rg_name}
		GROUP BY lodging.LD_NUM
		ORDER BY min_price ASC;
	</select>
	<select id="selectSearchRatingLodgingList" resultType="LodgingVO">
		SELECT lodging.*,
		(
			SELECT ROUND(AVG(rv_rating), 1)
			FROM review
			WHERE rv_table_name = 'lodging' 
				AND rv_number = lodging.LD_NUM
		) AS avg_rating,
		MIN(t.rm_price) AS min_price 
		FROM lodging
		JOIN (
			SELECT *
			FROM room
			LEFT JOIN (
				SELECT 
					lr_rm_num, 
					COUNT(lr_rm_num) AS count
				FROM lo_reservation
				WHERE (LR_CHECKOUT BETWEEN DATE_ADD(#{lr_checkin}, INTERVAL 1 DAY) AND #{lr_checkout})
				OR (LR_CHECKIN BETWEEN #{lr_checkin} AND DATE_SUB(#{lr_checkout}, INTERVAL 1 DAY))
					AND LR_STATE = "예약완료"
				GROUP BY lr_rm_num
			) AS tmp_lo_reservation ON lr_rm_num = rm_num
			WHERE RM_ROOMCOUNT - IFNULL(count, 0) > 0 
			AND rm_person >= #{rm_person}
		) t ON rm_ld_num = ld_num
		JOIN region ON rg_num = LD_RG_NUM
		WHERE rg_name = #{rg_name}
		GROUP BY lodging.LD_NUM
		ORDER BY ld_rating DESC;
	</select>
</mapper>